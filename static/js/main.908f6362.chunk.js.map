{"version":3,"sources":["components/Header/index.js","components/Greeting/index.js","utils/localStorage.js","utils/dateFormat.js","components/Buttons/index.js","components/TrackerBody/index.js","components/Tracker/index.js","components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Greeting","greeting","dt","DateTime","local","weekDay","weekdayLong","toLowerCase","$","text","currentHour","hour","id","saveHabits","habitArr","length","localStorage","setItem","JSON","stringify","removeItem","dayOfWeek","weekday","month","date","day","weekNumber","year","months","formatDate","i","parseInt","Buttons","buttonState","setButtonState","setFormState","handleChange","habits","formValue","setHabitsState","saveButtonHandler","tempArr","habitObj","habit","complete","console","log","push","Form","Group","Control","as","rows","onChange","Button","variant","onClick","TrackerBody","formState","daysOfTheWeek","weekProgress","useState","getItem","parse","map","scope","type","placeholder","j","value","deleteHabitButton","e","index","target","attributes","textContent","splice","Tracker","setFormValueState","weeklyHabitObj","days","forEach","dailyObj","newValue","oldValue","arrInd","findIndex","el","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.908f6362.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n    return (\n        <header className=\"my-3\">\n            <h1 className=\"text-center\">habit tracker.</h1>\n        </header>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport $ from 'jquery'\nimport { DateTime } from 'luxon';\n\nconst Greeting = () => {\n    // grab currentDay\n    const dt = DateTime.local();\n    const weekDay = dt.weekdayLong.toLowerCase();\n    $(\"#currentDay\").text(weekDay);\n    let greeting;\n    // update greeting\n    const currentHour = dt.hour;\n    if (currentHour < 12) {\n        greeting = 'morning'\n    } else if (12 <= currentHour && currentHour < 18) {\n        greeting = 'afternoon'\n    } else if (18 <= currentHour) {\n        greeting = 'evening'\n    }\n    return ( \n        <>\n            <h5 className = \"text-center\">good <span id = \"greeting\">{greeting}</span>, sydney!</h5>\n            <h6 className = \"text-center\">today is <span id = \"currentDay\">{weekDay}</span>.</h6>\n        </>\n    );\n};\n\nexport default Greeting;","export const getHabits = () => {\n    const habitsArr = localStorage.getItem('habits') ? JSON.parse(localStorage.getItem('habits')) : [];\n    return habitsArr;\n};\n\nexport const saveHabits = (habitArr) => {\n    if(habitArr.length) {\n        localStorage.setItem('habits', JSON.stringify(habitArr));\n    } else {\n        localStorage.removeItem('habits');\n    }\n};\n\nexport const saveProgress = (weeklyHabitProgArr) => {\n    if(weeklyHabitProgArr.length) {\n        localStorage.setItem('weekly progress', JSON.stringify(weeklyHabitProgArr));\n    } else {\n        localStorage.removeItem('weekly progress');\n    }\n};\n\nexport const getProgress = () => {\n    const weeklyHabitProgArr = localStorage.getItem('weekly progress') ? JSON.parse(localStorage.getItem('weekly progress')) : [];\n    return weeklyHabitProgArr;\n};","import { DateTime } from 'luxon';\n\nconst dayOfWeek = DateTime.local().weekday;\nconst month = DateTime.local().month;\nconst date = DateTime.local().day;\nconst weekNumber = DateTime.local().weekNumber;\nconst year = DateTime.local().year;\n\nconst months = {\n    '1': '31',\n    '2': '28',\n    '3': '31',\n    '4': '30',\n    '5': '31',\n    '6': '30',\n    '7': '31',\n    '8': '31',\n    '9': '30',\n    '10': '31',\n    '11': '30',\n    '12': '31'\n}\n\nconst formatDate = (i) => {\n    let formattedDate;\n    if(dayOfWeek === 1) {\n        formattedDate = `${month}/${date - i}`\n    } else {\n        if((date - dayOfWeek + 1 + i) === 0) {\n            formattedDate = `${month -1 }/${months[month-1]}`\n        } else if ((date - dayOfWeek + 1 + i) > months[month]) {\n            // accomodates for new year\n            if(month+1 > 12)  {\n                formattedDate = `1/${date - dayOfWeek + 1 + i - parseInt(months[12])}`\n            } else {\n                formattedDate = `${month+1}/${date - dayOfWeek + 1 + i - parseInt(months[month])}`\n            }\n        } else {\n            formattedDate =`${month}/${date - dayOfWeek + 1 + i}`\n        }\n    }\n    \n    return formattedDate;\n};\n\nexport {\n    formatDate,\n    weekNumber,\n    year,\n    dayOfWeek\n}","import React from 'react';\nimport { Button, Form } from 'react-bootstrap';\n\nconst Buttons = ({ buttonState, setButtonState, setFormState, handleChange, habits, formValue, setHabitsState, saveHabits }) => {\n    const addButtonHandler = () => {\n        setButtonState('add');\n    };\n\n    const editButtonHandler = () => {\n        setButtonState('edit');\n        setFormState('edit');\n    };\n\n    const deleteButtonHandler = () => {\n        setFormState('delete');\n        setButtonState('delete');\n    };\n\n    const saveButtonHandler = () => {\n        if (buttonState === 'add') {\n            let tempArr = [...habits];\n            const habitObj = {\n                habit: formValue,\n                complete: false\n            };\n            console.log(habitObj)\n            tempArr.push(formValue);\n            setHabitsState(tempArr)\n            saveHabits(tempArr);\n        }\n        setFormState('');\n        setButtonState('');\n    };\n\n    const doneHandler = () => {\n        setButtonState('');\n        setFormState('');\n    };\n\n    if (buttonState === 'add') {\n        return (\n            <>\n                <Form>\n                    <Form.Group>\n                        <Form.Control as=\"textarea\" rows={2} onChange={handleChange} />\n                    </Form.Group>\n                </Form>\n                <Button variant=\"outline-dark\" className=\"mx-1\" id=\"save-btn\" onClick={saveButtonHandler}>save.</Button>\n            </>\n        );\n    } else if (buttonState === 'edit') {\n        return (\n            <Button variant=\"outline-dark\" className=\"mx-1\" id=\"save-btn\" onClick={saveButtonHandler}>save.</Button>\n        );\n    } else if (buttonState === 'delete') {\n        return (\n            <Button variant=\"outline-dark\" className=\"mx-1\" onClick={doneHandler}>done.</Button>\n        );\n    }\n\n    return (\n        <>\n            <Button variant=\"outline-dark\" className=\"mx-1\" id=\"add-btn\" onClick={addButtonHandler}>add.</Button>\n            <Button variant=\"outline-dark\" className=\"btn btn-outline-dark mx-1\" id=\"edit-btn\" onClick={editButtonHandler}>edit.</Button>\n            <Button variant=\"outline-dark\" className=\"btn btn-outline-dark mx-1\" onClick={deleteButtonHandler}>delete.</Button>\n        </>\n    );\n};\n\nexport default Buttons;","import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { saveProgress, getProgress } from '../../utils/localStorage';\n\nconst TrackerBody = ({ formState, handleChange, habits, saveHabits, setHabitsState, setButtonState, daysOfTheWeek, date, year, weekProgress }) => {\n    const [weeklyHabitState, setWeeklyHabitState] = useState(getProgress());\n    // const handleCheckboxChange = (e) => {\n    //     const dayOfWeekInd = e.target.attributes.j.value;\n    //     const habitInd = e.target.attributes.i.value;\n    //     const tempArr = [...weeklyHabitState];\n    //     const selectedHabit = tempArr[dayOfWeekInd].habits[habitInd];\n    //     selectedHabit.complete = !selectedHabit.complete\n    //     setWeeklyHabitState(tempArr);\n    //     saveProgress(tempArr);\n    // };\n\n    if (formState === 'edit') {\n        return (\n            <tbody>\n                {habits.map((habit, i) =>\n                    <tr key={i}>\n                        <th scope=\"row\" id={i}>\n                            <Form>\n                                <Form.Group>\n                                    <Form.Control type=\"text\" placeholder={habit} onChange={handleChange} habit={habit} />\n                                </Form.Group>\n                            </Form>\n                        </th>\n                        {daysOfTheWeek.map((day, j) =>\n                            <td className=\"text-center\" key={j}><input className=\"form-check-input\" type=\"checkbox\" value=\"\" /></td>\n                        )}\n                    </tr>\n                )}\n            </tbody>\n        );\n    }\n    const deleteHabitButton = (i) => {\n        if (formState === 'delete') {\n            const deleteHabit = (e) => {\n                const index = parseInt(e.target.attributes.i.textContent);\n                const tempArr = [...habits];\n                tempArr.splice(index, 1);\n                setHabitsState(tempArr);\n                saveHabits(tempArr);\n                if (tempArr.length === 0) {\n                    setButtonState('add')\n                }\n            };\n            return (\n                <Button variant=\"outline-dark\" className=\"btn btn-outline-dark\" onClick={deleteHabit} i={i}>delete.</Button>\n            );\n        }\n    };\n\n    return (\n        <tbody>\n            {habits.map((habit, i) =>\n                <tr key={i}>\n                    <th scope=\"row\" className=\"d-flex justify-content-between\">\n                        {habit}:\n                        {deleteHabitButton(i)}\n                    </th>\n                    {daysOfTheWeek.map((day, j) =>\n                        <td className=\"text-center\" key={j}><input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={`${date(i)}/${year}`} i={i} j={j} /></td>\n                    )}\n                </tr>\n            )}\n        </tbody>\n    );\n};\n\nexport default TrackerBody;","import React, { useState } from 'react';\nimport { getHabits, saveHabits } from '../../utils/localStorage';\nimport { formatDate, weekNumber, year, dayOfWeek } from '../../utils/dateFormat'\nimport Buttons from '../Buttons';\nimport TrackerBody from '../TrackerBody';\n\nconst Tracker = () => {\n    const [buttonState, setButtonState] = useState('');\n    const [formValue, setFormValueState] = useState('');\n    const [formState, setFormState] = useState('');\n    const daysOfTheWeek = ['Mon', 'Tues', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    const [habits, setHabitsState] = useState(getHabits());\n    const [weekProgress, setWeekProgress] = useState({});\n    \n    const weeklyHabitObj = {\n        weekNumber: weekNumber,\n        dayOfWeek: dayOfWeek,\n        days: []\n    };\n    const tempArr = [...weeklyHabitObj.days]\n    daysOfTheWeek.forEach(day => {\n        const habitArr = [];\n        const dailyObj = {\n            day: day,\n            habits: habitArr\n        };\n        habits.forEach(habit => {\n            const habitObj = {\n                habit: habit,\n                complete: false\n            };\n            habitArr.push(habitObj)\n        })\n        \n        tempArr.push(dailyObj)\n    })\n    \n    weeklyHabitObj.days = tempArr;\n\n    const handleChange = (e) => {\n        if (buttonState === 'add') {\n            setFormValueState(e.target.value)\n        }\n        if (buttonState === 'edit') {\n            const newValue = e.target.value;\n            const oldValue = e.target.attributes.habit.textContent;\n\n            const arrInd = habits.findIndex(el => el === oldValue);\n            let tempArr = [...habits];\n            tempArr[arrInd] = newValue;\n            setHabitsState(tempArr);\n            saveHabits(tempArr);\n        }\n    };\n\n    return (\n        <>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope='col'>Habit:</th>\n                        {daysOfTheWeek.map((day, i) =>\n                            <th scope='col' className=\"text-center\" key={i}>{day}: <span id={day}>{formatDate(i)}</span></th>\n                        )}\n                    </tr>\n                </thead>\n                <TrackerBody \n                    formState={formState}\n                    handleChange={handleChange}\n                    habits ={habits}\n                    saveHabits={saveHabits}\n                    setHabitsState={setHabitsState}\n                    setButtonState ={setButtonState}\n                    daysOfTheWeek= {daysOfTheWeek}\n                    date = {formatDate}\n                    year = {year}\n                    weekProgress = {weeklyHabitObj}\n                />\n            </table>\n            <div id=\"buttonDiv\" className=\"container justify-content-center w-25\">\n                {habits.length === 0 && (\n                    <div className=\"row\">\n                        <p className=\"text-center my-5\">You haven't added any habits yet :(</p>\n                    </div>\n                )}\n                <div className=\"row\">\n                    <Buttons \n                        buttonState={buttonState} \n                        setButtonState={setButtonState} \n                        setFormState={setFormState} \n                        handleChange={handleChange}\n                        formValue={formValue}\n                        habits = {habits}\n                        saveHabits={saveHabits}\n                        setHabitsState={setHabitsState}\n                    />\n                </div>\n\n            </div>\n        </>\n    );\n};\n\n\n\nexport default Tracker;","import React from 'react';\nimport { DateTime } from 'luxon'\n\nconst Footer = () => {\n\n    return (\n        <footer className=\"mt-auto p-2\">\n            <h6 className=\"text-center\">sydney walcoff <span id=\"copywrite\">{DateTime.local().year}©</span></h6>\n        </footer>\n    );\n};\n\nexport default Footer;","import './App.css';\n\n// components\nimport Header from './components/Header';\nimport Greeting from './components/Greeting'\nimport Tracker from './components/Tracker'\nimport Footer from './components/Footer'\n\nfunction App() {\n  return (\n    <div className='d-flex flex-column min-vh-100'>\n      < Header />\n      <div className = \"main\">\n        <Greeting/>\n        <Tracker/>\n      </div>\n      < Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery';\nimport '@popperjs/core';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}